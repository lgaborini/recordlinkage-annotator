{"version":3,"sources":["Dropzone.js","ButtonsClassifier.js","RecordItem.js","Record.js","ValueBox.js","Reviewzone.js","ExportData.js","AppBar.js","App.js","serviceWorker.js","index.js"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","color","outline","transition","activeStyle","acceptStyle","rejectStyle","ReviewDropzone","props","onDrop","useCallback","acceptedFiles","length","console","log","reader","FileReader","onabort","onerror","onload","jsonReview","JSON","parse","result","reviewData","reviewState","readAsText","useDropzone","accept","multiple","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","useStyles","makeStyles","theme","button","margin","spacing","buttonNav","center","ButtonsClassifier","classes","handleAction","thisaction","actions","className","Button","variant","onClick","IconButton","RecordItem","ListItem","Typography","component","itemText","root","flexGrow","paper","textAlign","palette","text","secondary","title","fontSize","Record","Card","CardHeader","recordData","identifiers","recordSource","record","subheader","dataset","CardContent","List","fields","map","value","index","Fragment","key","toString","Divider","ValueBox","Grid","item","classValueBoxTitle","label","classValueBoxValue","statusText","statusTextValue","textMatch","success","main","textDistinct","textUnknown","primary","ReviewZone","useState","pairIndex","setPairIndex","appData","saveJSON","matchCount","distinctCount","rec","getStats","nextOrSave","navigateTo","direction","toast","Error","dictActions","label_str","dark","info","getLabelDisplayProperties","tabIndex","onKeyDown","e","dictKeys","hasOwnProperty","preventDefault","container","xs","sm","class","description","Paper","filter","ExportData","href","str","stringify","blob","Blob","type","window","URL","createObjectURL","exportUri","download","menuButton","marginRight","saveButton","ButtonAppBar","AppBar","position","Toolbar","Link","onToggleDark","App","isState","setIsState","undefined","setData","state","prefersDarkMode","useMediaQuery","blueGrey","setTheme","muiTheme","createMuiTheme","toastTransitionCustom","cssTransition","enter","exit","duration","appendPosition","collapse","collapseDuration","ThemeProvider","newPaletteType","CssBaseline","Container","maxWidth","fixed","paddingTop","align","gutterBottom","paragraph","target","data","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd4edf21.chunk.js","sourcesContent":["import React, {useCallback, useMemo} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport 'typeface-roboto';\r\n\r\n\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744'\r\n};\r\n\r\n\r\nexport default function ReviewDropzone(props) {\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n\r\n    if (acceptedFiles.length !== 1){\r\n      console.log(\"No valid files provided.\")\r\n      return \r\n    }\r\n\r\n    // show the file\r\n    console.log(acceptedFiles[0]);\r\n\r\n    // file reader\r\n    const reader = new FileReader()\r\n\r\n    // file reading failed\r\n    reader.onabort = () => console.log('file reading was aborted')\r\n    reader.onerror = () => console.log('file reading has failed')\r\n\r\n    // file reading successfull\r\n    reader.onload = () => {\r\n      const jsonReview = JSON.parse(reader.result);\r\n      // console.log(jsonReview)\r\n\r\n      // store data on a root level\r\n      props.reviewData(jsonReview);\r\n\r\n      // go the the next screen\r\n      props.reviewState(\"review\");\r\n\r\n    }\r\n\r\n    // read the file (this calls onload defined above)\r\n    reader.readAsText(acceptedFiles[0])\r\n\r\n  }, [props])\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    // acceptedFiles,\r\n    // rejectedFiles\r\n  } = useDropzone({\r\n    onDrop, \r\n    accept: 'application/json,.json',\r\n    multiple: false\r\n  });\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  ]);\r\n\r\n  return (\r\n    <div {...getRootProps({style})}>\r\n      <input {...getInputProps()} />\r\n        {(isDragAccept && !isDragReject) && (<p>Drop the file here</p>)}\r\n        {isDragReject && (<p>Reject - Please drop a .json file</p>)}\r\n        {!isDragActive && (<p>Drag 'n' drop annotation file here, or click to select</p>)}\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport 'typeface-roboto';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  buttonNav: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  center: {\r\n  },\r\n}));\r\n\r\nexport default function ButtonsClassifier(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleAction = function(thisaction) {\r\n    props.actions[thisaction]();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.center}>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => handleAction(\"match\")}>\r\n        Match (1)\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={() => handleAction(\"unknown\")}>\r\n        Unknown (2)\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => handleAction(\"distinct\")}>\r\n        Distinct (3)\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={() => handleAction(\"skip\")}>\r\n        Skip (spacebar)\r\n      </Button>\r\n\r\n      <IconButton color=\"default\" variant=\"outlined\" className={classes.buttonNav} onClick={() => handleAction(\"first\")}>\r\n        <SkipPreviousIcon />\r\n      </IconButton>\r\n      <IconButton color=\"default\" variant=\"outlined\" className={classes.buttonNav} onClick={() => handleAction(\"previous\")}>\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <IconButton color=\"default\" variant=\"outlined\" className={classes.buttonNav} onClick={() => handleAction(\"next\")}>\r\n        <ArrowForwardIcon />\r\n      </IconButton>\r\n      <IconButton color=\"default\" variant=\"outlined\" className={classes.buttonNav} onClick={() => handleAction(\"last\")}>\r\n        <SkipNextIcon />\r\n      </IconButton>\r\n      <IconButton color=\"default\" variant=\"outlined\" className={classes.buttonNav} onClick={() => handleAction(\"save\")}>\r\n        <SaveAltIcon />\r\n      </IconButton>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'typeface-roboto';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\n\r\nexport default function RecordItem(props) {\r\n  return (\r\n    <ListItem alignItems=\"flex-start\">\r\n      <Typography component=\"p\">\r\n        {props.itemText}\r\n      </Typography>\r\n    </ListItem>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'typeface-roboto';\r\n\r\nimport RecordItem from './RecordItem.js'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    fontSize: 8,\r\n  },\r\n}));\r\n\r\nexport default function Record(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n\r\n\t<Card className={classes.paper}>\r\n    <CardHeader \r\n      title={(typeof props.recordData.identifiers[props.recordSource].record !== 'undefined') ? \"Record \" + props.recordData.identifiers[props.recordSource].record : \"\"} \r\n      subheader={props.recordData.identifiers[props.recordSource].dataset}\r\n    />\r\n\r\n    {/* The content of the card. */}\r\n    <CardContent>\r\n      <List className={classes.root}>\r\n\r\n        {props.recordData.fields.map((value, index) => {\r\n          return (\r\n            <React.Fragment key={index.toString()}>\r\n              <RecordItem itemText={value[props.recordSource].value} />\r\n              <Divider component=\"li\" />\r\n            </React.Fragment>\r\n          )\r\n        })}\r\n      \r\n      </List>\r\n\r\n    </CardContent>\r\n\r\n  </Card>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst ValueBox = (props) => (\r\n   <Grid item>\r\n      <Typography color=\"textPrimary\" className={props.classValueBoxTitle}>\r\n         {props.label}\r\n      </Typography>\r\n      <Typography variant=\"h4\" color=\"textPrimary\" className={props.classValueBoxValue}>\r\n         {props.value}\r\n      </Typography>\r\n   </Grid>\r\n);\r\n\r\nexport default ValueBox;","import React, { useState } from 'react';\r\nimport 'typeface-roboto';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ButtonsClassifier from './ButtonsClassifier.js'\r\nimport Record from './Record.js'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport ValueBox from './ValueBox'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  statusText: {\r\n    textAlign: 'center'\r\n  },\r\n  statusTextValue: {\r\n    textAlign: 'center'\r\n  },\r\n  textMatch: {\r\n    color: theme.palette.success.main\r\n  },\r\n  textDistinct: {\r\n    color: theme.palette.secondary.main\r\n  },\r\n  textUnknown: {\r\n    color: theme.palette.primary.main\r\n  }\r\n}));\r\n\r\n\r\nexport default function ReviewZone(props) {\r\n  const classes = useStyles();\r\n\r\n  // Declare a new state contant for the index\r\n  const [pairIndex, setPairIndex] = useState(0);\r\n\r\n  // Declare a new state contant for the index\r\n  const [appData,] = useState(props.reviewData);\r\n\r\n\r\n  const getStats = () => {\r\n\r\n    var matchCount = 0;\r\n    var distinctCount = 0;\r\n\r\n    for (var rec in appData['pairs']) {\r\n      if (appData['pairs'][rec].label === 1) {\r\n        matchCount = matchCount + 1;\r\n      }\r\n      if (appData['pairs'][rec].label === 0) {\r\n        distinctCount = distinctCount + 1;\r\n      }\r\n    }\r\n\r\n    return ({ 'matchCount': matchCount, 'distinctCount': distinctCount })\r\n  }\r\n\r\n  // Define all actions\r\n\r\n  const saveJSON = () => {\r\n    console.log(\"Saving JSON:\")\r\n    console.log(getStats())\r\n    props.reviewState(\"export\");\r\n  }\r\n\r\n  const nextOrSave = () => {\r\n    if (pairIndex < appData['pairs'].length - 1) {\r\n      setPairIndex(pairIndex + 1);\r\n    } else {\r\n      saveJSON();\r\n    }\r\n  };\r\n\r\n  const isMatch = () => {\r\n    console.log(\"Records match\");\r\n    toast.success(\"Records match\");\r\n    appData['pairs'][pairIndex].label = 1;\r\n    appData['pairs'][pairIndex].label_str = \"Match\";\r\n\r\n    nextOrSave();\r\n  };\r\n\r\n  const isDistinct = () => {\r\n    console.log(\"Records are distinct\");\r\n    toast.dark(\"Records are distinct\");\r\n    appData['pairs'][pairIndex].label = 0;\r\n    appData['pairs'][pairIndex].label_str = \"Distinct\";\r\n\r\n    nextOrSave();\r\n  };\r\n\r\n  const isUnknown = () => {\r\n    console.log(\"Records are unknown\");\r\n    toast.info(\"Records are unknown\");\r\n    delete appData['pairs'][pairIndex].label;\r\n    delete appData['pairs'][pairIndex].label_str;\r\n\r\n    nextOrSave();\r\n  };\r\n\r\n  const skipRecord = () => {\r\n    console.log(\"Skipping record pair\");\r\n    toast(\"Skipping record pair\");\r\n    nextOrSave();\r\n  };\r\n\r\n  const navigateTo = (direction) => {\r\n    // console.log(`Navigation event! ${direction}`);\r\n    switch (direction) {\r\n      case \"first\":\r\n        setPairIndex(0);\r\n        toast(\"First record pair\");\r\n        break;\r\n      case \"previous\":\r\n        if (pairIndex > 0) {\r\n          setPairIndex(pairIndex - 1);\r\n        }\r\n        break;\r\n      case \"previousLoop\":\r\n        if (pairIndex > 0) {\r\n          setPairIndex(pairIndex - 1);\r\n        } else {\r\n          toast(\"Reached start, looping from the end.\");\r\n          setPairIndex(appData['pairs'].length - 1);\r\n        }\r\n        break;\r\n      case \"next\":\r\n        if (pairIndex < appData['pairs'].length - 1) {\r\n          setPairIndex(pairIndex + 1);\r\n        }\r\n        break;\r\n      case \"nextLoop\":\r\n        if (pairIndex < appData['pairs'].length - 1) {\r\n          setPairIndex(pairIndex + 1);\r\n        } else {\r\n          toast(\"Reached end, looping from the start.\");\r\n          setPairIndex(0);\r\n        }\r\n        break;\r\n      case \"last\":\r\n        setPairIndex(appData['pairs'].length - 1);\r\n        toast(\"Last record pair\");\r\n        break;\r\n      default:\r\n        throw new Error(\"unknown direction in navigateTo\");\r\n    }\r\n  }\r\n\r\n  // Dictionary of callbacks\r\n\r\n  const dictActions = {\r\n    \"match\": isMatch,\r\n    \"distinct\": isDistinct,\r\n    \"unknown\": isUnknown,\r\n    \"first\": () => navigateTo(\"first\"),\r\n    \"previous\": () => navigateTo(\"previous\"),\r\n    \"previousLoop\": () => navigateTo(\"previousLoop\"),\r\n    \"next\": () => navigateTo(\"next\"),\r\n    \"nextLoop\": () => navigateTo(\"nextLoop\"),\r\n    \"last\": () => navigateTo(\"last\"),\r\n    \"skip\": skipRecord\r\n  };\r\n\r\n\r\n  // Key to action mapping\r\n\r\n  const handleKeyPress = (e) => {\r\n    // console.log(\"Key pressed: \" + e.key);\r\n\r\n    const dictKeys = {\r\n      \"1\": \"match\",\r\n      \"2\": \"unknown\",\r\n      \"3\": \"distinct\",\r\n      \" \": \"skip\",\r\n      \"ArrowRight\": \"nextLoop\",\r\n      \"ArrowUp\": \"first\",\r\n      \"ArrowDown\": \"last\",\r\n      \"ArrowLeft\": \"previousLoop\",\r\n      \"s\": \"save\"\r\n    };\r\n\r\n    if (dictKeys.hasOwnProperty(e.key) && dictActions.hasOwnProperty(dictKeys[e.key])) {\r\n      dictActions[dictKeys[e.key]]();\r\n      e.preventDefault();\r\n    } else {\r\n      console.log(\"No action defined for this key.\")\r\n    }\r\n  };\r\n\r\n  const getLabelDisplayProperties = (label) => {\r\n    switch (label) {\r\n      case 0:\r\n        return ({\r\n          \"description\": \"distinct\",\r\n          \"class\": \"textDistinct\"\r\n        });\r\n      case 1:\r\n        return ({\r\n          \"description\": \"match\",\r\n          \"class\": \"textMatch\"\r\n        });\r\n      default:\r\n        return ({\r\n          \"description\": \"unknown\",\r\n          \"class\": \"textUnknown\"\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} tabIndex={-1} onKeyDown={handleKeyPress}>\r\n      <Grid container spacing={1}>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <Record recordData={appData['pairs'][pairIndex]} recordSource=\"a\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Record recordData={appData['pairs'][pairIndex]} recordSource=\"b\" />\r\n        </Grid>\r\n\r\n\r\n        {/* Current value*/}\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography color=\"textPrimary\" className={classes.statusText}>\r\n            This pair is\r\n          </Typography>\r\n          <Typography variant=\"h5\" style={{textAlign: \"center\"}} className={classes[getLabelDisplayProperties(appData['pairs'][pairIndex].label).class]}>\r\n            {\r\n              getLabelDisplayProperties(appData['pairs'][pairIndex].label).description\r\n            }\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {/* grid item for buttons at the bottom (or top))*/}\r\n        <Grid item xs={12} sm={12}>\r\n          <ButtonsClassifier actions={dictActions} />\r\n        </Grid>\r\n\r\n        {/* Summary */}\r\n        <Grid item xs={12} sm={12}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={3}>\r\n                <ValueBox label=\"Current pair\" value={`${pairIndex + 1}/${appData['pairs'].length}`} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <ValueBox label=\"Matches\"\r\n                  value={appData['pairs'].filter(item => item.label === 1).length}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <ValueBox label=\"Distinct\"\r\n                  value={appData['pairs'].filter(item => item.label === 0).length}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <ValueBox label=\"To process\"\r\n                  value={appData['pairs'].filter(item => item.label !== 0 && item.label !== 1).length}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport 'typeface-roboto';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\n\r\nexport default function ExportData(props) {\r\n\r\n  // console.log(props.reviewData);\r\n\r\n  const exportUri = () => {\r\n    var str = JSON.stringify(props.reviewData, null, 2);\r\n\r\n    const blob = new Blob([str], { type: 'application/json' });\r\n    var csvURL = window.URL.createObjectURL(blob);\r\n    return(csvURL)\r\n  }\r\n\r\n  return (\r\n\r\n          <Button color=\"default\" href={exportUri()} download='result.json' >\r\n            <SaveAltIcon />\r\n            Export\r\n          </Button>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport 'typeface-roboto';\r\n\r\nimport ExportData from './ExportData.js'\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  saveButton: {\r\n  \tmarginRight: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n\r\n      \t  {/* Name of the page */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link href=\"/\" variant=\"inherit\" color=\"inherit\">RecordLinkage ANNOTATOR</Link>\r\n          </Typography>\r\n\r\n          {\r\n          props.reviewState === \"review\" &&\r\n            <ExportData reviewData={props.reviewData}/>\r\n      \t}\r\n\r\n        <IconButton color=\"default\" onClick={props.onToggleDark}>\r\n          <Brightness4Icon/>\r\n        </IconButton>\r\n\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport 'typeface-roboto';\r\n\r\nimport './App.css';\r\n\r\nimport ReviewDropzone from './Dropzone.js' \r\nimport ReviewZone from './Reviewzone.js'\r\nimport ButtonAppBar from './AppBar.js'\r\nimport ExportData from './ExportData.js'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport {createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nimport { ToastContainer, cssTransition } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n// favicon: https://favicon.io/favicon-generator/?t=RL&ff=Kreon&fs=80&fc=%23FFFFFF&b=rounded&bc=%2337474f\r\n\r\n\r\nexport default function App() {\r\n\r\n  // Declare a new state variable for stopping\r\n  const [isState, setIsState] = useState(\"upload\");\r\n\r\n  // Declare a new state contant for the index\r\n  const [appData, setData] = useState(undefined);\r\n\r\n  const reviewData = (data) => {\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n\r\n\r\n  const reviewState = (state) => {\r\n    setIsState(state);\r\n  };\r\n\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const [theme, setTheme] = useState({\r\n    palette: {\r\n      primary: blueGrey,\r\n      type: prefersDarkMode ? 'light' : 'dark', // strange. prefersDarkmode returns first the opposite\r\n    }\r\n  });\r\n\r\n  // we change the palette type of the theme in state\r\n  const toggleDarkTheme = () => {\r\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    setTheme({\r\n      palette: {\r\n        primary: blueGrey,\r\n        type: newPaletteType,\r\n      }\r\n    });\r\n  };\r\n\r\n  // we generate a MUI-theme from state's theme object\r\n  const muiTheme = createMuiTheme(theme);\r\n\r\n  // Toast transition\r\n  const toastTransitionCustom = cssTransition({\r\n    enter: 'zoomIn',\r\n    exit: 'zoomOut',\r\n    duration: 200,\r\n    appendPosition: false,\r\n    collapse: true,\r\n    collapseDuration: 200\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <ButtonAppBar reviewState={isState} onToggleDark={toggleDarkTheme} reviewData={appData}/>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\" fixed>\r\n\r\n\r\n        <Typography component=\"div\" style={{ paddingTop: '50px' }}>\r\n\r\n          {isState === 'upload' &&\r\n            <React.Fragment>\r\n              <Typography component=\"h2\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Record pair labeling for record linkage and data matching\r\n              </Typography>\r\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Turn your record pairs into golden record pairs with this intuitive labeling tool. Labeled record pairs are important for training and validation record linkage and data matching processes. <Link href=\"https://github.com/J535D165/recordlinkage-annotator#create-annotation-file\" target=\"_blank\">Create an annotation file</Link> and start labeling your data!\r\n              </Typography>\r\n            <ReviewDropzone reviewData={reviewData} reviewState={reviewState}/>\r\n            </React.Fragment>\r\n          }\r\n\r\n          { isState === 'review' && \r\n            <ReviewZone reviewState={reviewState} reviewData={appData}/>\r\n          }\r\n\r\n          {isState === 'export' &&\r\n            <React.Fragment>\r\n              <Typography component=\"h2\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Done!\r\n              </Typography>\r\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                You finished the annotation. You can now export the data and save it for further analysis. \r\n              </Typography>\r\n\r\n              <ExportData reviewData={appData}/>\r\n\r\n            </React.Fragment>\r\n          }\r\n\r\n        </Typography>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={1000}\r\n          hideProgressBar\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          transition={toastTransitionCustom}\r\n        />\r\n      </Container>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}